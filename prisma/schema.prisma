// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  content String @db.VarChar(255)

  authorId String

  @@index([authorId])
}

model Project {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  jobNumber   String @db.VarChar(255)
  name        String @db.VarChar(255)
  description String @db.VarChar(255)
  notes       String @db.Text

  address String @db.VarChar(255)
  city    String @db.VarChar(255)
  state   String @db.VarChar(255)
  zip     String @db.VarChar(255)

  startDate       DateTime
  endDate         DateTime
  status          String   @db.VarChar(255)
  percentComplete Float    @default(0)
  completed       Boolean  @default(false)

  TotalManHours Int   @default(0)
  JobDetails    Json? @default("{}") @db.Json

  laborCost         Float @default(0)
  subContractorCost Float @default(0)
  materialCost      Float @default(0)
  equipmentCost     Float @default(0)
  otherCost         Float @default(0)

  safetyRating        String @db.VarChar(255)
  qualityRating       String @db.VarChar(255)
  staffingRating      String @db.VarChar(255)
  profitabilityRating String @db.VarChar(255)
  customerRating      String @db.VarChar(255)

  BillDate DateTime

  scopeOfWork     ScopeOfWork[]
  blueprints      Blueprint[]
  sectors         Sector[]
  ScheduleHistory ScheduleHistoryItem[]
  tags            Tag[]

  authorId String

  @@index([authorId])
  @@fulltext([description, notes])
  @@fulltext([name, description, notes, address, city, state, zip])
}

model ScopeOfWork {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String @db.VarChar(255)
  description String @db.VarChar(255)

  scope     String         @db.Text
  materials MaterialType[]

  authorId  String
  Project   Project? @relation(fields: [projectId], references: [id])
  projectId String?

  @@index([authorId])
  @@index([projectId])
}

model CrewMember {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String  @db.VarChar(255)
  position    String  @db.VarChar(255)
  description String? @db.VarChar(255)
  phone       String  @db.VarChar(255)
  email       String  @db.VarChar(255)
  travel      String? @db.VarChar(255)
  skills      Json?
  rating      String  @default("5") @db.VarChar(255)
  sector      Sector? @relation(fields: [sectorId], references: [id])

  startDate      DateTime?
  lastReviewDate DateTime?
  // reviewDate     DateTime?
  // reviewNotes    String? @db.Text
  // time off dates and notes needed here too

  tags Tag[]

  wage   Float @default(0)
  burden Float @default(0)
  rate   Float @default(0)
  hours  Float @default(0)
  total  Float @default(0)

  authorId String
  sectorId String?

  schedules  ScheduleHistoryItem[]
  blueprints Blueprint[]

  @@index([authorId])
  @@index([sectorId])
}

model Blueprint {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  pinned      Boolean? @default(false)
  live        Boolean? @default(true)

  data String @db.Text

  sector      Sector[]
  permissions Permissions[]
  tags        Tag[]

  crewMembers CrewMember[]
  equipment   Equipment[]
  projects    Project[]

  scheduleHistories ScheduleHistory[]

  notes Note[]

  authorId String

  @@index([authorId])
}

model ScheduleHistory {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  notes String @db.Text
  committed Boolean @default(false)

  exportLink ExportLink[]

  ScheduleHistoryItems ScheduleHistoryItem[]
  blueprint            Blueprint             @relation(fields: [blueprintId], references: [id])

  defaultStartDate DateTime
  defaultEndDate   DateTime

  blueprintId String @db.VarChar(255)

  authorId String

  @@index([blueprintId])
  @@index([authorId])
}

model ScheduleHistoryItem {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  notes String @db.Text

  startTime String @db.VarChar(255)
  endTime   String @db.VarChar(255)

  crew            CrewMember?     @relation(fields: [crewId], references: [id])
  equipment       Equipment?      @relation(fields: [equipmentId], references: [id])
  project         Project         @relation(fields: [projectId], references: [id])
  scheduleHistory ScheduleHistory @relation(fields: [scheduleHistoryId], references: [id])

  projectId         String  @db.VarChar(255)
  crewId            String? @db.VarChar(255)
  equipmentId       String? @db.VarChar(255)
  scheduleHistoryId String  @db.VarChar(255)

  authorId String

  @@index([authorId])
  @@index([projectId])
  @@index([crewId])
  @@index([equipmentId])
  @@index([scheduleHistoryId])
}

model Equipment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String  @db.VarChar(255) // this is the name of the equipment, like "Manitex 40100 Crane"
  type        String  @db.VarChar(255) // this is the type of equipment, like a crane, or a forklift
  EquipmentId String  @db.VarChar(255) // this is some JR&Co's internal ID
  description String? @db.VarChar(255) // this is a description of the equipment if desired

  data Json? @db.Json // other data

  scheduleHistory ScheduleHistoryItem[]

  blueprints Blueprint[]

  authorId String

  @@index([authorId])
}

model Sector {
  id        String   @id @unique @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name           String @unique @db.VarChar(255)
  departmentCode String @unique @db.VarChar(255)
  description    String @db.VarChar(255)

  CrewMembers CrewMember[]
  Blueprints  Blueprint[]
  Projects    Project[]

  authorId String

  @@index([authorId])
}

model Log {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name          String  @db.VarChar(255)
  description   String  @db.Text()
  editedMessage String? @db.Text()
  url           String  @db.VarChar(255)
  action        String  @db.VarChar(255)
  category      String  @db.VarChar(255)
  severity      String  @db.VarChar(255)
  data          String? @db.VarChar(255)

  logReplys    LogReply[]
  logReactions LogReaction[]

  authorId String

  @@index([authorId])
}

model LogReply {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  message       String @db.VarChar(255)
  editedMessage String @db.VarChar(255)
  log           Log[]

  authorId String

  @@index([authorId])
}

model LogReaction {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  reaction String @db.VarChar(255)
  log      Log[]

  authorId String

  @@index([authorId])
}

model Announcement {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String @db.VarChar(255)
  description String @db.VarChar(255)
  reason      String @db.VarChar(255)
  url         String @db.VarChar(255)
  status      String @db.VarChar(255)

  authorId String

  @@index([authorId])
}

model Note {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String @db.VarChar(255)
  description String @db.VarChar(255)

  data String @db.Text

  blueprint Blueprint? @relation(fields: [blueprintId], references: [id])

  authorId    String
  blueprintId String?

  @@index([authorId])
  @@index([blueprintId])
}

model ExportLink {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String @db.VarChar(255)
  description String @db.VarChar(255)
  link        String @db.VarChar(255)

  scheduleHistory ScheduleHistory? @relation(fields: [scheduleHistoryId], references: [id])

  scheduleHistoryId String?

  authorId String

  @@index([authorId])
  @@index([scheduleHistoryId])
}

model MaterialType {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String @db.VarChar(255)
  description String @db.VarChar(255)

  authorId      String
  ScopeOfWork   ScopeOfWork? @relation(fields: [scopeOfWorkId], references: [id])
  scopeOfWorkId String?

  @@index([authorId])
  @@index([scopeOfWorkId])
}

model Permissions {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String          @db.VarChar(255)
  description String          @db.VarChar(255)
  keywords    PermissionKey[]

  authorId   String
  users      User[]
  blueprints Blueprint[]

  @@index([authorId])
}

model PermissionKey {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String        @db.VarChar(255)
  description String        @db.VarChar(255)
  color       String        @db.VarChar(255)
  Permissions Permissions[]

  authorId String

  @@index([authorId])
}

model User {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  permissionsId String

  clerkId     String      @unique @db.VarChar(255)
  permissions Permissions @relation(fields: [permissionsId], references: [id])
  role        String      @db.VarChar(255)

  authorId String

  @@index([authorId])
  @@index([permissionsId])
}

model Tag {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name            String @db.VarChar(255)
  description     String @db.VarChar(255)
  backgroundColor String @db.VarChar(255)
  type            String @db.VarChar(255) //crews, projects, or blueprints?

  authorId String

  CrewMembers CrewMember[]
  projects    Project[]
  blueprints  Blueprint[]

  @@index([authorId])
}
