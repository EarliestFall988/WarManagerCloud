import type { NextPage } from "next";
import { LoadingSpinner } from "~/components/loading";

import { api } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Link from "next/link";
import Head from "next/head";
import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
dayjs.extend(relativeTime);

const HomePage: NextPage = () => {
  const { user } = useUser();

  if (!user) {
    return (
      <div className="flex h-screen items-center justify-center">
        <div className="flex flex-col items-center justify-center gap-2">
          <p className="text-lg italic text-red-500">Woah!</p>
          <p className="p-2 text-center text-2xl font-semibold">
            You must be logged in to create a blueprint
          </p>
          <div className="w-full bg-red-500 p-2 text-center md:w-1/6 md:rounded">
            <SignInButton />
          </div>
        </div>
      </div>
    );
  }

  const { data, isLoading, isError } = api.blueprints.getAll.useQuery();

  if (isError) return <div>sorry...there was an error. Try again later.</div>;

  return (
    <>
      <Head>
        <title>War Manager - Home</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="h-screen w-screen">
        <div className="flex items-center justify-between bg-stone-900 p-2 px-5 text-center text-lg font-semibold">
          <div className="hidden md:flex" />
          <h1>Blueprints</h1>
          <div className="rounded bg-red-800 p-2">
            {user ? <SignOutButton /> : <SignInButton />}
          </div>
        </div>
        <div className="flex justify-center">
          <div className="flex w-full flex-col gap-2 p-2 md:w-3/4 md:flex-row">
            <Link
              href="/newBlueprint"
              className="w-full rounded-lg border-2 border-stone-700 bg-black p-1 text-center text-lg text-slate-100 transition-all duration-100 hover:bg-stone-900"
            >
              New Blueprint
            </Link>
            <Link
              href="/newBlueprint"
              className="w-full rounded-lg border-2 border-stone-700 bg-black p-1 text-center text-lg text-slate-100 transition-all duration-100 hover:bg-stone-900"
            >
              New Crew Member
            </Link>
            <Link
              href="/newBlueprint"
              className="w-full rounded-lg border-2 border-stone-700 bg-black p-1 text-center text-lg text-slate-100 transition-all duration-100 hover:bg-stone-900"
            >
              New Project
            </Link>
          </div>
        </div>

        {isLoading ? (
          <div className="flex h-full w-full items-center justify-center">
            <LoadingSpinner />
          </div>
        ) : (
          <div>
            <div className="flex justify-center">
              <div className="flex w-full flex-col gap-2 p-2 md:w-3/4">
                {data?.map((blueprint) => (
                  <Link
                    href={`/blueprints/${blueprint.id}`}
                    passHref
                    className="flex w-full items-center justify-between rounded bg-stone-900 p-2 transition-all duration-100 hover:bg-stone-800"
                    key={blueprint.id}
                  >
                    <h2 className="w-3/2 truncate text-left text-lg font-bold md:w-1/4">
                      {blueprint.name}
                    </h2>
                    <div className="hidden justify-center  truncate font-thin md:flex md:w-1/4">
                      <p>{blueprint.description}</p>
                    </div>
                    <p className="w-1/4 truncate text-right text-sm italic">
                      {dayjs(blueprint.createdAt).fromNow()}
                    </p>
                  </Link>
                ))}
              </div>
            </div>
          </div>
        )}
      </div>
    </>
  );
};

export default HomePage;
