// import type { GetStaticPropsContext, GetStaticProps, NextPage } from "next";
// import Head from "next/head";
// import { LoadingPage } from "~/components/loading";
// import { api } from "~/utils/api";

// import { PageLayout } from "~/components/layout";

// import Image from "next/image";
// import { useRouter } from "next/router";

// import { PostView } from "~/components/postview";
// import { generateSSGHelper } from "~/server/helpers/ssgHelper";

// const ProfileFeed = (props: { userId: string }) => {
//   const { data, isLoading } = api.posts.getPostsByUserId.useQuery({
//     userId: props.userId,
//   });

//   if (isLoading) return <LoadingPage />;

//   if (!data || data.length === 0)
//     return (
//       <div className="p-2 text-center italic text-slate-400">
//         User has not posted
//       </div>
//     );

//   return (
//     <div>
//       <p className="border-b-2 border-slate-500 p-2 text-center text-lg">
//         {data.length} post{data.length === 1 ? "" : "s"}
//       </p>
//       {data?.map((fullPost) => (
//         <PostView {...fullPost} key={fullPost.post.id} />
//       ))}
//     </div>
//   );
// };

// const ProfilePage: NextPage<{ email: string }> = ({ email }) => {
//   const router = useRouter();

//   const { data, isLoading } = api.profile.getUserByEmail.useQuery({
//     postId: email,
//   });

//   if (isLoading) return <LoadingPage />;

//   if (!data) return <div>Something went wrong</div>;
//   if (!data.profilePicture) return <div>Something went wrong</div>;
//   if (!data.email) return <div>Something went wrong</div>;

//   return (
//     <>
//       <Head>
//         <title>{`${data.email}\'s Profile`}</title>
//         <meta name="description" content="Generated by create-t3-app" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>
//       <PageLayout>
//         <div className="p-2 text-lg font-semibold">
//           <div className="flex items-end gap-2">
//             <button className="text-2xl font-bold" onClick={router.back}>
//               &lt;{" "}
//             </button>
//             <p>{email}</p>
//           </div>
//         </div>
//         <div className=" flex h-32 flex-col items-start justify-between bg-slate-800 p-2">
//           <Image
//             src={data?.profilePicture}
//             alt={`${data?.email}'s profile picture`}
//             className="h-28 w-28 translate-y-16 rounded-full border-2 border-black"
//             width={62}
//             height={62}
//           />
//         </div>

//         <div className="border-b border-slate-400 p-2 pb-4 pt-20 text-2xl font-semibold">
//           <div>@{email}</div>
//         </div>
//         <ProfileFeed userId={data.id} />
//       </PageLayout>
//     </>
//   );
// };

// export const getStaticProps: GetStaticProps = async (
//   context: GetStaticPropsContext
// ) => {
//   const ssg = generateSSGHelper();

//   const slug = context.params?.slug;

//   if (typeof slug !== "string") throw new Error("slug is not a string");

//   if (slug.length <= 1) throw new Error("slug too short");

//   const resultingEmail = slug.substring(1, slug.length);
//   // console.log("email: " + resultingEmail);

//   await ssg.profile.getUserByEmail.prefetch({ postId: resultingEmail });

//   const result = ssg.dehydrate();

//   // console.log(result);

//   return {
//     props: {
//       trpcState: result,
//       email: resultingEmail,
//     },
//     revalidate: 1,
//   };
// };

// export const getStaticPaths = () => {
//   return {
//     paths: [],
//     fallback: "blocking",
//   };
// };

// export default ProfilePage;


import { type NextPage } from "next";
import { useRouter } from "next/router";
import { useEffect } from "react";
import { LoadingPage2 } from "~/components/loading";

const OldPage: NextPage = () => {
  const { push } = useRouter();

  useEffect(() => {
    void push("/404"); //redirect to a valid location...
  }, []);

  return <LoadingPage2 />; // show a loading screen while we redirect...
};

export default OldPage;
